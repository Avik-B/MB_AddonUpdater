<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MusicBeePlugin" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
	
	<Style x:Key="HeroButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="#FF183FA8"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#FF345FD3"/>
			</Trigger>
			
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="#FF2E2E2E"/>
				<Setter Property="Foreground" Value="#FF747474"/>
			</Trigger>

		</Style.Triggers>
	</Style>

	<Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="#FF3C3C3C"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#FF575757"/>
			</Trigger>
		</Style.Triggers>
	</Style>
		
	
	
	
	
	
	<SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
	<SolidColorBrush x:Key="SelectedBrush" Color="#FF3E3B3B" />
	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
	<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

	<Style TargetType="TabItem" x:Key="tabHdr">
		
		<Setter Property="Template">
			<Setter.Value>
				
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid>
						<Border 
                                Name="Border"
                                Margin="0,0,0,0" 
                                Background="{x:Null}"
                                BorderBrush="AliceBlue"  
                                BorderThickness="1,1,1,0" 
                                CornerRadius="0" 
							>
							<ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="10"
                                    RecognizesAccessKey="True"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="False">
							<Setter Property="Foreground" Value="White"></Setter>
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Panel.ZIndex" Value="100" />
							<Setter TargetName="Border" Property="Background" Value="#FF3E3B3B" />
							<Setter Property="Foreground" Value="White"></Setter>
							<Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">

							<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>










	<LinearGradientBrush  x:Key="DarkBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF3C3C3C" Offset="0"/>
			<GradientStop Color="#FF363636" Offset="1"/>
		</LinearGradientBrush>

	<Style x:Key="GridViewColumnHeaderGripper"
        TargetType="Thumb">
		<Setter Property="Width" Value="1"/>
		<Setter Property="Background" Value="#FF535353"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
                          Background="Transparent">
						<Rectangle HorizontalAlignment="Center"
                                 Width="3"
                          Fill="{TemplateBinding Background}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>

		<Setter Property="Background" Value="{StaticResource DarkBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource
                  {x:Static SystemColors.ControlTextBrushKey}}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewColumnHeader">
					<Grid>
						<Border Name="HeaderBorder"
                              BorderThickness="0"
                              BorderBrush="{StaticResource DarkBrush}"
                              Background="{StaticResource DarkBrush}"
                              Padding="15 8">
							<ContentPresenter Name="HeaderContent"
                          TextElement.Foreground="White"
                          Margin="0,0,0,1"
                          VerticalAlignment="{TemplateBinding
                          VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding
                          HorizontalContentAlignment}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels=
                          "{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<Thumb x:Name="PART_HeaderGripper"
                          HorizontalAlignment="Right"
                          Margin="0,0,0,0"
                          Style="{StaticResource
                          GridViewColumnHeaderGripper}"/>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="HeaderBorder"
                           Property="Background" Value="#FF4D4D4D"/>

							<Setter TargetName="HeaderContent"
                            Property="TextElement.Foreground"
                           Value="#eee"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>





	<Style x:Key="ItemContStyle" TargetType="{x:Type ListViewItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Style.Triggers>
			<DataTrigger Binding="{Binding Balance, Converter={StaticResource PolarValueConv}}" Value="-1" >
				<Setter Property="Background" Value="{StaticResource LossBrush}" />
			</DataTrigger>
		</Style.Triggers>
	</Style>






	<Style TargetType="{x:Type ListViewItem}" x:Key="{x:Type ListViewItem}" >
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">

					<Border SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}">

						<Grid Margin="10 5">

							<!-- This is used when GridView is put inside the ListView -->
							<GridViewRowPresenter Content="{TemplateBinding ContentControl.Content}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>

							<!-- This is used for ListView that does not use GridView -->
							<ContentPresenter x:Name="contentPresenter"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      Visibility="Collapsed"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
						</Grid>

					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
							<Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#FF555555" />
						</Trigger>

						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="#FF3C3C3C" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>